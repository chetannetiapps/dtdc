<?php

function thailand_tracking_menu() {

  $items['tracking/%'] = array(
    'title' => 'DTDC Thailand Tracking',
    'page arguments' => array(1),
    'page callback' => 'dtdc_thailand_tracking',
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * implements hook_block_info()
 **/

function thailand_tracking_block_info() {
  $blocks = array();
  $blocks['thailand_tracking_block'] = array(
    'info' => t('Thailand Tracking Block'),
  );
  return $blocks;
}

function thailand_tracking_block_view($delta = '') {
  $block = array();

  switch ($delta) {
     case 'thailand_tracking_block':
      $block['subject'] = '';
      $block['content'] = drupal_get_form('thailand_tracking_form');
    break;
  }

  return $block;
}

function thailand_tracking_form($form, &$form_state){
  $form = array();
  $active = array(0 => t('Shipment Number'), 1 => t('Reference Number'));
  $form['track']['consigments'] = array(
     '#type' => 'radios',
     '#title' => t(''),
     '#default_value' => 0,
     '#options' => $active,
     '#description' => t(''),
     '#prefix' => '<div class="radio">',
     '#suffix' => '</div>',
    );
     $form['track']['trackid'] = array(
      '#type' => 'textarea',
      '#title' => t(''),
      '#default_value' =>'',
      //'#element_validate' => array('element_validate_number'),
      '#required' => TRUE,
      '#attributes' => array('placeholder' => 'Upto 25 AWB, separated by comma'),
      '#resizable' => false,
      '#prefix' => '<div class="form-group">',
      '#suffix' => '</div>',
     );
  $form['track']['submit'] = array(
    '#type' => 'submit',
    '#value' => 'SEARCH',
    //'#submit' => array('tracking_locate_submit'),
  );
  return $form;
}

function thailand_tracking_form_submit(&$form, $form_state){
  $trackingType = $form_state['values']['consigments'];
  $tracking_no = $form_state['values']['trackid'];

  //strip_tags(trim())
  //strlen() == 9 || strlen() == 12
    //$tracking_no[0]

   if(strlen($form_state['values']['consigments']) == 0){
     drupal_set_error("Please enter Shipment Number.");

   }
  //$form_state['redirect'] = 'tracking/'.$tracking_no;
  drupal_goto('tracking/'.$tracking_no);
}

function dtdc_thailand_tracking($trackingNos) {

    $trackResult = array();
    $trackingNos = trim(urldecode($trackingNos));
    $trackingNos = (string)$trackingNos;
    if(strpos($trackingNos, ",")) {
      $tracklist = explode(",",$trackingNos);
      foreach ($tracklist as $trackingNo) {
        $output = trackingCURLRequest($trackingNo);
        $trackResult[] = $output;
      }
    }
    else {
      $tracklist[0] = $trackingNos;
          $trackResult[0] = trackingCURLRequest($trackingNos);
    }

  //if only one event is there, add it to a numerical index, so the rest
  //of the code work will work without any change.
  if(is_string(array_keys($trackResult[0]['Event'])[0])){
    $trackResult[0]['Event'] = array($trackResult[0]['Event']);
  }

  //~ echo '<pre>';
  //~ print_r($trackResult);
  //~ echo '</pre>';
  //~ // exit;

    // echo "final <pre/>";print_r($trackResult);
    $eventCache        = array();
    $OriginEntityCache = array();
    $UpdateEntityCache = array();

    foreach($trackResult as $masterkey => $resultarray) {
      if(!empty($resultarray)) {
        foreach($resultarray['Event'] as $key => $event) {
      /*echo '<pre>';
      print_r($event);
      echo '</pre>';
      exit;*/
            $EventDateTime = $event['EventDateTime'];
            list($date, $time, $type) = explode(" ", $EventDateTime);
            $date = str_replace("/", "-", $date);
            $dateObject = new DateTime($date);
            $newDateTime = $dateObject->format('D, M, d, Y').' '.substr($time, 0, 5).' '.$type;
            $trackResult[$masterkey]['Event'][$key]['FormatedEventDateTime'] = $newDateTime;

            $EventID = $event['EventID'];
            if(!isset($eventCache[$EventID])) {
                $EventObject = thailand_tracking_node_load_by_title($EventID, 'tracking_event');
                $trackResult[$masterkey]['Event'][$key]['EventName'] = $eventCache[$EventID] = $EventObject->field_evname['und'][0]['value'];
            } else {
                $trackResult[$masterkey]['Event'][$key]['EventName'] = $eventCache[$EventID];
            }

            $OriginEntityID = $event['OriginEntityID'];
            if(!isset($OriginEntityCache[$OriginEntityID])) {
                $OriginEntityObject = thailand_tracking_node_load_by_title($OriginEntityID, 'tracking_entity');
                $trackResult[$masterkey]['Event'][$key]['OriginEntity'] = $OriginEntityCache[$OriginEntityID] = $OriginEntityObject->field_ename['und'][0]['value'];
            } else {
                $trackResult[$masterkey]['Event'][$key]['OriginEntity'] = $OriginEntityCache[$OriginEntityID];
            }

            $UpdateEntityCountry = $event['UpdateEntityCountry'];
            if(!isset($UpdateEntityCache[$UpdateEntityCountry])) {
        $UpdateEntityCountryObject = thailand_tracking_node_load_by_title($UpdateEntityCountry, 'country');
                $trackResult[$masterkey]['Event'][$key]['UpdateEntityCountryName'] = $UpdateEntityCache[$UpdateEntityCountry] = $UpdateEntityCountryObject->field_name['und'][0]['value'];
            } else {
                $trackResult[$masterkey]['Event'][$key]['UpdateEntityCountryName'] = $UpdateEntityCache[$UpdateEntityCountry];
            }
        }
      } else {
          $trackResult[$masterkey]['tracking-no'] = $tracklist[$masterkey];
      }
    }
    drupal_get_form('thailand_tracking_form');
    $eventCount = 0;
    $finalEvent = $trackResult['Event'][$eventCount - 1]['EventID'];
    switch ($finalEvent) {
      case 1:
        $colorsString = "'#084594','#2171b5','#4292c6','#6baed6','#9ecae1','#c6dbef','#eff3ff'";
      break;
      case 15:
        $colorsString = "'#084594','#2171b5','#4292c6','#6baed6','#9ecae1','#c6dbef','#7F8D9E'";
      break;
      case 4:
        $colorsString = "'#084594','#2171b5','#4292c6','#6baed6','#9ecae1','#7F8D9E','#7F8D9E'";
      break;
      case (3 OR 48):
        $colorsString = "'#084594','#2171b5','#4292c6','#6baed6','#7F8D9E','#7F8D9E','#7F8D9E'";
      break;
      case 91:
        $colorsString = "'#084594','#2171b5','#7F8D9E','#7F8D9E','#7F8D9E','#7F8D9E','#7F8D9E'";
      break;
      case 90:
        $colorsString = "'#084594','#7F8D9E','#7F8D9E','#7F8D9E','#7F8D9E','#7F8D9E','#7F8D9E'";
      break;
      default:
        $colorsString = "'#7F8D9E','#7F8D9E','#7F8D9E','#7F8D9E','#7F8D9E','#7F8D9E','#7F8D9E'";
      break;
    }
    return theme('tracking_ref',array('trackRecords'=>$trackResult,'eventCount'=>$eventCount,'colorsString'=>$colorsString,'finalEvent'=>$finalEvent));
}

function thailand_tracking_theme($existing, $type, $theme, $path) {
  return array(
    'tracking_ref' => array(
      'template' => 'page--thaidtdctracking',
      'path' => (drupal_get_path('theme', 'thailand_dtdc') . '/templates/'),
      'variables' => array('trackRecords' => array(),'eventCount' => 0,'finalEvent' => 90),
    ),
  );
}

function trackingCURLRequest($referenceNumber) {
    $fields_string = '';
    $fields = array(
    'Username' => '36E85218F0520B3709AE8054A2D8B55D',
    'Password' => '88A460BD2DD669B03E59B4740478D495',

    'xmlStream' => '<?xml version="1.0" encoding="UTF-8"?>
                    <WSGET>
                        <AccessRequest>
                            <WSVersion>WS1.0</WSVersion>
                            <FileType>2</FileType>
                            <Action>Download</Action>
                            <EntityID>A75CB7AD4B230B5EFD1EACEBFCFD94F6</EntityID>
                            <EntityPIN>si3dl3x</EntityPIN>
                            <MessageID>0001</MessageID>
                        </AccessRequest>
                        <ReferenceNumber>'.$referenceNumber.'</ReferenceNumber>
                        <ShowExtra>Y</ShowExtra>
                    </WSGET>',
        'LevelConfirm' => 'summary'
    );

     //url-ify the data for the POST

    foreach($fields as $key=>$value) { $fields_string .= $key.'='.$value.'&'; }

    rtrim($fields_string,'&');

    //open connection

    $ch = curl_init();

    //set the url, number of POST vars, POST data
    $url = "https://ws05.ffdx.net/ffdx_ws/v12/service_ffdx.asmx/WSDataTransfer";
    curl_setopt($ch,CURLOPT_URL,$url);

    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

    curl_setopt($ch,CURLOPT_POST,count($fields));

    curl_setopt($ch,CURLOPT_POSTFIELDS,$fields_string);

    // Send to remote and return data to caller.
    $result = curl_exec($ch);
    //~ echo '<pre>';
    //~ print_r($result);
    //~ echo '</pre>';
    // $output = json_decode(json_encode((array) simplexml_load_string($result)),1);

    $xml=simplexml_load_string($result) or die("Error: Cannot create object");
    //~ echo '<pre>';
    //~ print_r($xml);
    //~ echo '</pre>';

    $data_array = xmlstr_to_array($xml);
    // $array = json_decode(json_encode($data_array), true);
    // echo "\n type : ".gettype($xml)."\n my result<pre/>";
    // print_r($data_array['AccessRequest']);exit;
    curl_close($ch);
    // echo "<pre/>";print_r($data_array);
    return $data_array;
}

function xmlstr_to_array($xmlstr) {
  $doc = new DOMDocument();
  $doc->loadXML($xmlstr);
  return domnode_to_array($doc->documentElement);
}

function domnode_to_array($node) {
  $output = array();
  switch ($node->nodeType) {
   case XML_CDATA_SECTION_NODE:
   case XML_TEXT_NODE:
    $output = trim($node->textContent);
   break;
   case XML_ELEMENT_NODE:
    for ($i=0, $m=$node->childNodes->length; $i<$m; $i++) {
     $child = $node->childNodes->item($i);
     $v = domnode_to_array($child);
     if(isset($child->tagName)) {
       $t = $child->tagName;
       if(!isset($output[$t])) {
        $output[$t] = array();
       }
       $output[$t][] = $v;
     }
     elseif($v) {
      $output = (string) $v;
     }
    }
    if(is_array($output)) {
     if($node->attributes->length) {
      $a = array();
      foreach($node->attributes as $attrName => $attrNode) {
       $a[$attrName] = (string) $attrNode->value;
      }
      $output['@attributes'] = $a;
     }
     foreach ($output as $t => $v) {
      if(is_array($v) && count($v)==1 && $t!='@attributes') {
       $output[$t] = $v[0];
      }
     }
    }
   break;
  }
  return $output;
}

/**
 * Helper function; Load node by title
*/
function thailand_tracking_node_load_by_title($title, $node_type) {
  if(is_string($title)) {
    $query = new EntityFieldQuery();
    $entities = $query->entityCondition('entity_type', 'node')
      ->propertyCondition('type', $node_type)
      ->propertyCondition('title', $title)
      ->propertyCondition('status', 0)
      ->execute();
  }
  if(!empty($entities)) {
    return node_load(array_shift(array_keys($entities['node'])));
  }
}
